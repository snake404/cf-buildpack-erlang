#!/bin/bash

##
# usage: bin/compile <build-dir> <cache-dir>

set -e
home_dir=$(cd $(dirname $(dirname $0)); pwd)
mkdir -p "$1" "$2"

build_dir=$(cd "$1/" && pwd)
test -z ${build_dir} && exit

echo "Creating preferred file"
echo '19.2' > ${build_dir}/.preferred_otp_version
echo "Done preferred file"
echo "Creating rebar file"
var1='{relx, [
    {release,
      { "customrabbit", "1.0.0" },
      [ sasl, runtime_tools]
    },
    
    {sys_config, "./config/sys.config"},
    {vm_args,    "./config/vm.args"},

    {dev_mode, false},
    {include_erts, true}
  ]
}.'
var2=''
result="$var1"
echo "$result" > ${build_dir}/rebar.config
echo "Finished rebar file"

echo "Listing build dir content"
ls -lah ${build_dir}
echo "Done listing content"

cache_dir=$(cd "$2/" && pwd)
test -z ${cache_dir} && exit

DEFAULT_OTP_VERSION="20.1"

if [ -f ${build_dir}/.preferred_otp_version ]; then
  OTP_VERSION=$(cat ${build_dir}/.preferred_otp_version)
fi

ver=${OTP_VERSION:=${DEFAULT_OTP_VERSION}}
tarball=OTP-${ver}.tar.gz
OTP_TARBALL_URL="https://s3.amazonaws.com/heroku-buildpack-elixir/erlang/cedar-14/${tarball}"

ERLROOT=${build_dir}/otp
PROFILE=${build_dir}/.profile.d

echo "-----> Build environment"
echo "Home directory = ${home_dir}"
echo "Build directory = ${build_dir}"
echo "Erlang root = ${ERLROOT}"
echo "Cache directory = ${cache_dir}"
echo "Erlang OTP version = ${ver}"
echo "Precompiled binary URL = ${OTP_TARBALL_URL}"

echo "LISTING ALL DIRECTORIES"

# ls ${ERLROOT} / | awk '
# /:$/&&f{s=$0;f=0}
# /:$/&&!f{sub(/:$/,"");s=$0;f=1;next}
# NF&&f{ print s"/"$0 }'
echo "FINISHED ALL DIRECTORIES"

echo "-----> Using Erlang/OTP $ver"

(
    set -e

    # Already cached?
    test -f ${cache_dir}/${tarball} && exit

    # No, so rebuild the cache directory
    rm -rf ${cache_dir}/*
    cd ${cache_dir}

    echo "-------> Fetching Erlang/OTP $ver from ${OTP_TARBALL_URL}"
    curl -sO ${OTP_TARBALL_URL} || exit 1
)

echo "-------> Unpacking Erlang/OTP ${cache_dir}/${tarball}"

mkdir -p ${ERLROOT}
tar zxf ${cache_dir}/${tarball} -C ${ERLROOT} --strip-components=1

echo "-------> Installing Erlang/OTP $ver"
ln -s ${ERLROOT} /app/otp
${ERLROOT}/Install -minimal /app/otp

PATH=/app/otp/bin:$PATH
export PATH


echo "LISTING ERL DIRECTORIES"

ls ${ERLROOT} / | awk '
/:$/&&f{s=$0;f=0}
/:$/&&!f{sub(/:$/,"");s=$0;f=1;next}
NF&&f{ print s"/"$0 }'
ls -lah /tmp/app/otp/releases/19
echo "SPACE"
ls -lah /tmp/app/otp/releases/19/OTP_VERSION
echo "SPACE"
ls -lah /tmp/app/otp/releases/RELEASES
echo "FINISHED ERL DIRECTORIES"
cd $build_dir

# Does rebar3 already exist?
if [ ! -e "rebar3" ]; then
  echo "-----> Installing Rebar from buildpack"
  cp ${home_dir}/opt/rebar3 ./
fi

echo "-----> Building with Rebar3"
unset GIT_DIR
./rebar3 release 2>&1 | sed -u 's/^//'

if [ ${PIPESTATUS[0]} -ne 0 ]; then
  echo "-----> Build failed"
  exit 1
fi

if [ -f ${home_dir}/opt/otp.sh ]; then
  mkdir -p ${PROFILE}
  cp ${home_dir}/opt/otp.sh ${PROFILE}
fi
echo 'web: customrabbit foreground' > ${build_dir}/Procfile
echo "-----> Build succeeded"

